{"version":3,"file":"static/webpack/static/development/pages/tests/webgl/study/test.js.bcb18f06f02c5e373c2f.hot-update.js","sources":["webpack:///./pages/tests/webgl/study/test.tsx"],"sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport { MatIV } from '../../../../libs/minMatrix';\n\nconst vsSource = `\nattribute vec3 position;\nuniform   mat4 mvpMatrix;\n\nvoid main(void) {\n  gl_Position = mvpMatrix * vec4(position, 1.0);\n}\n`\nconst fsSource = `\nvoid main(void) {\n  gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n}\n`\n\nclass W014 {\n  private canvasWidth = 300;\n  private canvasHeight = 300;\n\n  constructor(\n    private gl: WebGLRenderingContext\n  ) {}\n\n  run() {\n      let gl = this.gl;\n      gl.clearColor(0.0, 0.0, 0.0, 1.0);\n      gl.clearDepth(1.0);\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n      let vShader = this.createShader(this.gl.createShader(this.gl.VERTEX_SHADER)!, vsSource);\n      let fShader = this.createShader(this.gl.createShader(this.gl.FRAGMENT_SHADER)!, fsSource);\n      let program = this.createProgram(vShader, fShader);\n      this.gl.useProgram(program);\n      let attLocation = this.gl.getAttribLocation(program, 'position')\n      let attStride = 3\n      let vertexPosition = [\n          0.0, 1.0, 0.0,\n          1.0, 0.0, 0.0,\n          -1.0,0.0, 0.0,\n      ]\n\n      let vbo = this.createVbo(vertexPosition)\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, vbo)\n      this.gl.enableVertexAttribArray(attLocation)\n      this.gl.vertexAttribPointer(attLocation, attStride, this.gl.FLOAT, false, 0, 0)\n\n      const m = new MatIV();\n      let mMatrix = m.create()\n      let vMatrix = m.create()\n      let pMatrix = m.create()\n      let mvpMatrix = m.create()\n      m.identity(mMatrix)\n      m.identity(vMatrix)\n      m.identity(pMatrix)\n      m.identity(mvpMatrix)\n\n      m.lookAt([0.0, 1.0, 3.0], [0, 0, 0], [0, 1, 0], vMatrix)\n      m.perspective(90, this.canvasWidth / this.canvasHeight, 0.1, 100, pMatrix)\n\n      m.multiply(pMatrix, vMatrix, mvpMatrix)\n      m.multiply(mvpMatrix, mMatrix, mvpMatrix)\n\n      let uniLocation = this.gl.getUniformLocation(program, 'mvpMatrix')\n      this.gl.uniformMatrix4fv(uniLocation, false, mvpMatrix)\n      this.gl.drawArrays(this.gl.TRIANGLES, 0, 3)\n      this.gl.flush()\n  }\n\n  createShader(shader: WebGLShader, source: string) {\n      this.gl.shaderSource(shader, source);\n      this.gl.compileShader(shader);\n      if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n          throw new Error(this.gl.getShaderInfoLog(shader) ?? '');\n      }\n      return shader;\n  }\n\n  createProgram(vs: WebGLShader, fs: WebGLShader) {\n      var program = this.gl.createProgram()!;\n\n      this.gl.attachShader(program, vs)\n      this.gl.attachShader(program, fs)\n      this.gl.linkProgram(program)\n\n      if (!this.gl.getProgramParameter(program, this.gl.LINK_STATUS)) {\n          throw new Error(this.gl.getProgramInfoLog(program) ?? '');\n      }\n      return program;\n  }\n\n  createVbo(data: number[]) {\n      var vbo = this.gl.createBuffer();\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, vbo)\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(data), this.gl.STATIC_DRAW)\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null)\n      return vbo;\n  }\n}\n\n\nclass Canvas extends React.Component {\n  private canvasRef: React.RefObject<HTMLCanvasElement>\n\n  constructor(props: any) {\n    super(props)\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const canvasEl = this.canvasRef.current\n    if (canvasEl) {\n      console.log(this.canvasRef.current)\n      canvasEl.width = 300\n      canvasEl.height = 300\n\n      const webGLContext = canvasEl.getContext('webgl') as WebGLRenderingContext\n      new W014(webGLContext).run();\n    }\n  }\n\n  render() {\n    return <canvas ref={this.canvasRef}></canvas>\n  }\n}\n\nexport default () => (\n  <div>\n    <h1>Test</h1>\n    <Canvas />\n  </div>\n)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AAQA;AACA;AAKA;AAIA;AAEA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAIA;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AACA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAtBA;AACA;AAwBA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;;;;A","sourceRoot":""}